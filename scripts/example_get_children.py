"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–µ—Ç–æ–¥–∞ get_children –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–µ—Ä–∞—Ä—Ö–∏–µ–π –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –ù–µ–æ—Å–∏–Ω—Ç–µ–∑–µ.
–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—á–µ—Ä–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∏ –æ–±—Ö–æ–¥ –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–æ–≥–æ –¥–µ—Ä–µ–≤–∞.
"""

import asyncio
import traceback

from neosintez_api.config import NeosintezConfig
from neosintez_api.core.client import NeosintezClient
from neosintez_api.core.exceptions import NeosintezAPIError
from neosintez_api.services import ClassService


async def get_children_info(
    client: NeosintezClient, parent_id: str, max_depth: int = 2, current_depth: int = 0
) -> None:
    """
    –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –ø–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—á–µ—Ä–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–∞—Ö —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –≥–ª—É–±–∏–Ω—ã.

    Args:
        client: –ö–ª–∏–µ–Ω—Ç API –ù–µ–æ—Å–∏–Ω—Ç–µ–∑–∞
        parent_id: ID —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
        max_depth: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≥–ª—É–±–∏–Ω–∞ –æ–±—Ö–æ–¥–∞
        current_depth: –¢–µ–∫—É—â–∞—è –≥–ª—É–±–∏–Ω–∞ (–¥–ª—è –æ—Ç—Å—Ç—É–ø–æ–≤)
    """
    if current_depth >= max_depth:
        return

    indent = "  " * current_depth

    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–æ—á–µ—Ä–Ω–∏–µ –æ–±—ä–µ–∫—Ç—ã
        children = await client.objects.get_children(parent_id)

        if not children:
            print(f"{indent}‚îî‚îÄ (–Ω–µ—Ç –¥–æ—á–µ—Ä–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤)")
            return

        print(f"{indent}‚îî‚îÄ –ù–∞–π–¥–µ–Ω–æ {len(children)} –¥–æ—á–µ—Ä–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤:")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 –¥–æ—á–µ—Ä–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤
        for i, child in enumerate(children[:5]):
            child_marker = "‚îú‚îÄ" if i < min(4, len(children) - 1) else "‚îî‚îÄ"
            print(f"{indent}  {child_marker} [{i + 1}] {child.Name}")
            print(f"{indent}     ID: {child.Id}")
            print(f"{indent}     EntityId: {child.EntityId}")

            # –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ö–æ–¥–∏–º –¥–æ—á–µ—Ä–Ω–∏–µ –æ–±—ä–µ–∫—Ç—ã (–æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –≥–ª—É–±–∏–Ω—É)
            if current_depth < max_depth - 1:
                await get_children_info(client, str(child.Id), max_depth, current_depth + 1)

        if len(children) > 5:
            print(f"{indent}  ‚îî‚îÄ ... –∏ –µ—â–µ {len(children) - 5} –æ–±—ä–µ–∫—Ç–æ–≤")

    except NeosintezAPIError as e:
        print(f"{indent}‚îî‚îÄ ‚ùå –û—à–∏–±–∫–∞ API –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–æ—á–µ—Ä–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤: {e}")
    except Exception as e:
        print(f"{indent}‚îî‚îÄ ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")


async def demonstrate_children_with_class_info(client: NeosintezClient, parent_id: str) -> None:
    """
    –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—á–µ—Ä–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–ª–∞—Å—Å–∞—Ö.

    Args:
        client: –ö–ª–∏–µ–Ω—Ç API –ù–µ–æ—Å–∏–Ω—Ç–µ–∑–∞
        parent_id: ID —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
    """
    print("\n‚ñ∂Ô∏è –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—á–µ—Ä–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–ª–∞—Å—Å–∞—Ö...")

    try:
        children = await client.objects.get_children(parent_id)

        if not children:
            print("  ‚îî‚îÄ –î–æ—á–µ—Ä–Ω–∏–µ –æ–±—ä–µ–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return

        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∞—Å—Å–∞–º–∏
        class_service = ClassService(client)

        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç—ã –ø–æ –∫–ª–∞—Å—Å–∞–º
        class_groups = {}
        for child in children:
            class_id = str(child.EntityId)
            if class_id not in class_groups:
                class_groups[class_id] = []
            class_groups[class_id].append(child)

        print(f"  ‚îî‚îÄ –î–æ—á–µ—Ä–Ω–∏–µ –æ–±—ä–µ–∫—Ç—ã —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω—ã –ø–æ {len(class_groups)} –∫–ª–∞—Å—Å–∞–º:")

        for class_id, objects in class_groups.items():
            try:
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∞—Å—Å–µ
                class_info = await class_service.get_by_id(class_id)
                class_name = class_info.Name if class_info else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–ª–∞—Å—Å"

                print(f"\n    üìÅ –ö–ª–∞—Å—Å: {class_name} (ID: {class_id})")
                print(f"       –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–æ–≤: {len(objects)}")

                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –æ–±—ä–µ–∫—Ç–∞ —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞
                for i, obj in enumerate(objects[:3]):
                    marker = "‚îú‚îÄ" if i < min(2, len(objects) - 1) else "‚îî‚îÄ"
                    print(f"       {marker} {obj.Name}")

                if len(objects) > 3:
                    print(f"       ‚îî‚îÄ ... –∏ –µ—â–µ {len(objects) - 3} –æ–±—ä–µ–∫—Ç–æ–≤ —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞")

            except Exception as e:
                print(f"    ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∞—Å—Å–µ {class_id}: {e}")

    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–µ –ø–æ –∫–ª–∞—Å—Å–∞–º: {e}")


async def main():
    """
    –û—Å–Ω–æ–≤–Ω–æ–π —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å –º–µ—Ç–æ–¥–æ–º get_children:
    1. –ü—Ä–æ—Å—Ç–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—á–µ—Ä–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    2. –ò–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–π –æ–±—Ö–æ–¥ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –≥–ª—É–±–∏–Ω—ã
    3. –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –∫–ª–∞—Å—Å–∞–º —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    """
    # ID —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ ID, —á—Ç–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–ª–∏ —Ä–∞–Ω–µ–µ
    test_parent_id = "46303b37-eefd-ee11-91a4-005056b6948b"

    print("--- –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –º–µ—Ç–æ–¥–æ–º get_children ---")
    print(f"–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –æ–±—ä–µ–∫—Ç ID: {test_parent_id}\n")

    settings = NeosintezConfig()
    client = NeosintezClient(settings)

    try:
        # --- –≠—Ç–∞–ø 1: –ü—Ä–æ—Å—Ç–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—á–µ—Ä–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ ---
        print("‚ñ∂Ô∏è –≠—Ç–∞–ø 1: –ü—Ä–æ—Å—Ç–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—á–µ—Ä–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤...")

        children = await client.objects.get_children(test_parent_id)

        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(children)} –¥–æ—á–µ—Ä–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤")

        if children:
            print("\nüìã –ü–µ—Ä–≤—ã–µ 5 –¥–æ—á–µ—Ä–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤:")
            for i, child in enumerate(children[:5]):
                print(f"  {i + 1}. {child.Name}")
                print(f"     ID: {child.Id}")
                print(f"     EntityId: {child.EntityId}")
                print()

        # --- –≠—Ç–∞–ø 2: –ò–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–π –æ–±—Ö–æ–¥ ---
        print("\n‚ñ∂Ô∏è –≠—Ç–∞–ø 2: –ò–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–π –æ–±—Ö–æ–¥ –¥–µ—Ä–µ–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤ (–≥–ª—É–±–∏–Ω–∞: 2 —É—Ä–æ–≤–Ω—è)...")

        print(f"üå≥ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–µ—Ä–µ–≤–∞ –æ—Ç –æ–±—ä–µ–∫—Ç–∞ {test_parent_id}:")
        await get_children_info(client, test_parent_id, max_depth=2)

        # --- –≠—Ç–∞–ø 3: –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –∫–ª–∞—Å—Å–∞–º ---
        await demonstrate_children_with_class_info(client, test_parent_id)

        print("\nüéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–µ—Ç–æ–¥–∞ get_children –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")

    except NeosintezAPIError as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ API –ù–µ–æ—Å–∏–Ω—Ç–µ–∑: {e}")
        print("\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("  - –û–±—ä–µ–∫—Ç —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        print("  - –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –æ–±—ä–µ–∫—Ç–∞ –∏–ª–∏ –µ–≥–æ –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
        print("  - –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç–µ–≤—ã–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º")

    except Exception as e:
        print(f"\n‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        print("\n--- –ü–æ–ª–Ω—ã–π Traceback ---")
        traceback.print_exc()

    finally:
        await client.close()
        print("\n–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ.")


if __name__ == "__main__":
    asyncio.run(main())
