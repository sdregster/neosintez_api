{
    "openapi": "3.0.1",
    "info": {
        "title": "Неосинтез",
        "version": "v1"
    },
    "paths": {
        "/api/structure/attributes": {
            "get": {
                "tags": [
                    "Attributes"
                ],
                "description": "Following permissions are required: **Attribute_Read**",
                "operationId": "Attributes_ListAttributesObsolete",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioAttribute"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioAttribute"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioAttribute"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Attributes"
                ],
                "description": "Following permissions are required: **Attribute_Create**",
                "operationId": "Attributes_CreateAttribute",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioAttribute"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioAttribute"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioAttribute"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioAttribute"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/WioAttribute"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WioAttribute"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WioAttribute"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/structure/attributes/{id}": {
            "put": {
                "tags": [
                    "Attributes"
                ],
                "description": "Following permissions are required: **Attribute_Update**",
                "operationId": "Attributes_UpdateAttribute",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioAttribute"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioAttribute"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioAttribute"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioAttribute"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/structure/attributes/types": {
            "get": {
                "tags": [
                    "Attributes"
                ],
                "description": "Following permissions are required: **Attribute_Read**",
                "operationId": "Attributes_ListAttributeTypeInfos",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioAttributeTypeInfo"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioAttributeTypeInfo"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioAttributeTypeInfo"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/attributes/search": {
            "post": {
                "tags": [
                    "Attributes"
                ],
                "description": "Following permissions are required: **Attribute_Read**, **Unit_Read_IfExpanded**, **Group_Read_IfExpanded**",
                "operationId": "Attributes_FindAttributes",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "The number of skipped items.\r\n<remarks>Default value is 0.</remarks><remarks>You may combine a parameter with \"first\" or \"last\".</remarks>",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "first",
                        "in": "query",
                        "description": "Will take the number of items given in parameter, starting from the first item of query result.\r\n<remarks>You may combine a parameter with \"after\".</remarks><remarks>You cannot combine a parameter with \"last\" or \"before\".</remarks>",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Will take the items after the given id.\r\n<remarks>You may combine a parameter with \"first\".</remarks><remarks>You cannot combine a parameter with \"last\" or \"before\".</remarks>",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "last",
                        "in": "query",
                        "description": "Will take the number of items given in parameter, starting from the last item of query result.\r\n<remarks>You may combine a parameter with \"before\".</remarks><remarks>You cannot combine a parameter with \"first\" or \"after\".</remarks>",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "Will take the items before the given id.\r\n<remarks>You may combine a parameter with \"last\".</remarks><remarks>You cannot combine a parameter with \"first\" or \"after\".</remarks>",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include_bound",
                        "in": "query",
                        "description": "Include boundary (after or before) item in result.\r\n<remarks>Must combine a parameter with \"after\" or \"before\".</remarks>",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sorting field value.\r\n<remarks>You must combine a parameter with \"sort_order\".</remarks>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sorting order value.\r\n<remarks>You must combine a parameter with \"sort_by\".</remarks>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShapingResult_Of_WioAttribute"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShapingResult_Of_WioAttribute"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShapingResult_Of_WioAttribute"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/structure/attributes/groups": {
            "get": {
                "tags": [
                    "Attributes"
                ],
                "description": "Following permissions are required: **Structure**",
                "operationId": "Attributes_ListGroupsObsolete",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseItem_Of_Int64"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseItem_Of_Int64"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseItem_Of_Int64"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Attributes"
                ],
                "description": "Following permissions are required: **Structure**",
                "operationId": "Attributes_CreateGroupObsolete",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItem_Of_Int64"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItem_Of_Int64"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItem_Of_Int64"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItem_Of_Int64"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseItem_Of_Int64"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseItem_Of_Int64"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseItem_Of_Int64"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Conflict"
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Attributes"
                ],
                "description": "Following permissions are required: **Structure**",
                "operationId": "Attributes_DeleteGroupsObsolete",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/structure/attributes/groups/{id}": {
            "put": {
                "tags": [
                    "Attributes"
                ],
                "description": "Following permissions are required: **Structure**",
                "operationId": "Attributes_UpdateGroupObsolete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItem_Of_Int64"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItem_Of_Int64"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItem_Of_Int64"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItem_Of_Int64"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "409": {
                        "description": "Conflict"
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/structure/attributes/units": {
            "get": {
                "tags": [
                    "Attributes"
                ],
                "description": "Following permissions are required: **Structure**",
                "operationId": "Attributes_ListUnitsObsolete",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseItem_Of_Int64"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseItem_Of_Int64"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseItem_Of_Int64"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Attributes"
                ],
                "description": "Following permissions are required: **Structure**",
                "operationId": "Attributes_CreateUnitObsolete",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItem_Of_Int64"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItem_Of_Int64"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItem_Of_Int64"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItem_Of_Int64"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseItem_Of_Int64"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseItem_Of_Int64"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseItem_Of_Int64"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Conflict"
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Attributes"
                ],
                "description": "Following permissions are required: **Structure**",
                "operationId": "Attributes_DeleteUnitsObsolete",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/structure/attributes/units/{id}": {
            "put": {
                "tags": [
                    "Attributes"
                ],
                "description": "Following permissions are required: **Structure**",
                "operationId": "Attributes_UpdateUnitObsolete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItem_Of_Int64"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItem_Of_Int64"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItem_Of_Int64"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItem_Of_Int64"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "409": {
                        "description": "Conflict"
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/attributes": {
            "get": {
                "tags": [
                    "Attributes"
                ],
                "description": "Following permissions are required: **Attribute_Read**, **Unit_Read_IfExpanded**, **Group_Read_IfExpanded**",
                "operationId": "Attributes_ListAttributes",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "The number of skipped items.\r\n<remarks>Default value is 0.</remarks><remarks>You may combine a parameter with \"first\" or \"last\".</remarks>",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "first",
                        "in": "query",
                        "description": "Will take the number of items given in parameter, starting from the first item of query result.\r\n<remarks>You may combine a parameter with \"after\".</remarks><remarks>You cannot combine a parameter with \"last\" or \"before\".</remarks>",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Will take the items after the given id.\r\n<remarks>You may combine a parameter with \"first\".</remarks><remarks>You cannot combine a parameter with \"last\" or \"before\".</remarks>",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "last",
                        "in": "query",
                        "description": "Will take the number of items given in parameter, starting from the last item of query result.\r\n<remarks>You may combine a parameter with \"before\".</remarks><remarks>You cannot combine a parameter with \"first\" or \"after\".</remarks>",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "Will take the items before the given id.\r\n<remarks>You may combine a parameter with \"last\".</remarks><remarks>You cannot combine a parameter with \"first\" or \"after\".</remarks>",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include_bound",
                        "in": "query",
                        "description": "Include boundary (after or before) item in result.\r\n<remarks>Must combine a parameter with \"after\" or \"before\".</remarks>",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sorting field value.\r\n<remarks>You must combine a parameter with \"sort_order\".</remarks>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sorting order value.\r\n<remarks>You must combine a parameter with \"sort_by\".</remarks>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShapingResult_Of_Attribute"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShapingResult_Of_Attribute"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShapingResult_Of_Attribute"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/attributes/{id}": {
            "get": {
                "tags": [
                    "Attributes"
                ],
                "description": "Following permissions are required: **Attribute_Read**, **Unit_Read_IfExpanded**, **Group_Read_IfExpanded**",
                "operationId": "Attributes_GetAttribute",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attribute"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attribute"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attribute"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/structure/entities": {
            "get": {
                "tags": [
                    "Classes"
                ],
                "summary": "Получение списка классов",
                "operationId": "Classes_ListClasses",
                "parameters": [
                    {
                        "name": "only",
                        "in": "query",
                        "description": "без атрибутов и вьюэров",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioEntity"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioEntity"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioEntity"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Classes"
                ],
                "description": "Following permissions are required: **Structure**",
                "operationId": "Classes_CreateClass",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioEntity"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioEntity"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioEntity"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioEntity"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseItem"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseItem"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Conflict"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/structure/entities/{id}": {
            "put": {
                "tags": [
                    "Classes"
                ],
                "description": "Following permissions are required: **Structure**",
                "operationId": "Classes_UpdateClass",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioEntity"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioEntity"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioEntity"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioEntity"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Conflict"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/structure/entities/{id}/parent/{parentId}": {
            "put": {
                "tags": [
                    "Classes"
                ],
                "description": "Following permissions are required: **Structure**",
                "operationId": "Classes_UpdateParent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "parentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/structure/entities/{id}/attributes": {
            "post": {
                "tags": [
                    "Classes"
                ],
                "description": "Following permissions are required: **Structure**",
                "operationId": "Classes_AddAttributes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Class identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Attribute identifiers.",
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "distribute",
                        "in": "query",
                        "description": "Distribute in views.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Classes"
                ],
                "description": "Following permissions are required: **Structure**",
                "operationId": "Classes_RemoveAttributes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Class identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Attribute identifiers.",
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/structure/entities/{id}/attributes/{attrId}": {
            "put": {
                "tags": [
                    "Classes"
                ],
                "description": "Following permissions are required: **Structure**",
                "operationId": "Classes_UpdateAttributeValidators",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Class identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "attrId",
                        "in": "path",
                        "description": "Attribute identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Attribute for update.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioEntityAttribute"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioEntityAttribute"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioEntityAttribute"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioEntityAttribute"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/content/{id}": {
            "head": {
                "tags": [
                    "Content"
                ],
                "operationId": "Content_GetContentHead",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "get": {
                "tags": [
                    "Content"
                ],
                "operationId": "Content_GetContent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Content"
                ],
                "summary": "Удалить загруженный временный файл",
                "operationId": "Content_DeleteContent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/content": {
            "post": {
                "tags": [
                    "Content"
                ],
                "operationId": "Content_UploadContent",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            },
                            "encoding": {
                                "file": {
                                    "style": "form"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentValue"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentValue"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/settings/globalization": {
            "get": {
                "tags": [
                    "Globalization"
                ],
                "description": "Following permissions are required: **Globalization_Read**",
                "operationId": "Globalization_GetGlobalization",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Globalization"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Globalization"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Globalization"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/settings/globalization/culture": {
            "get": {
                "tags": [
                    "Globalization"
                ],
                "description": "Following permissions are required: **DefaultCulture_Read**",
                "operationId": "Globalization_GetCulture",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Culture"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Culture"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Culture"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Globalization"
                ],
                "description": "Following permissions are required: **DefaultCulture_Update**",
                "operationId": "Globalization_UpdateCulture",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCultureCommand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCultureCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCultureCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCultureCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/icons": {
            "get": {
                "tags": [
                    "Icons"
                ],
                "operationId": "Icons_ListIcons",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Icon"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Icon"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Icon"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/models/{id}/self": {
            "get": {
                "tags": [
                    "Models"
                ],
                "summary": "Вернет модель, по ее идентификатору",
                "description": "Following permissions are required: **Models**",
                "operationId": "Models_GetModel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Идентификатор модели",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeNg"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeNg"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeNg"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/models/{id}": {
            "get": {
                "tags": [
                    "Models"
                ],
                "description": "Following permissions are required: **Models**",
                "operationId": "Models_ListModels",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "идентификатор модели, чьи дочерние модели нужно получить (необязательный, ограничение в автодокументации)",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "leafId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "demandHasFiles",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeNg"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeNg"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeNg"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Models"
                ],
                "description": "Following permissions are required: **Models**, **ModelsEditor**",
                "operationId": "Models_UpdateModel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "parentId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeNg"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeNg"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeNg"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeNg"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/models/filtered": {
            "get": {
                "tags": [
                    "Models"
                ],
                "description": "Following permissions are required: **Models**",
                "operationId": "Models_ListFilteredModels",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeNg"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeNg"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeNg"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/models/{id}/andfiles": {
            "get": {
                "tags": [
                    "Models"
                ],
                "description": "Following permissions are required: **Models**",
                "operationId": "Models_ListModelsAndFiles",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "parentId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeNg"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeNg"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeNg"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/models/{id}/ancestors": {
            "get": {
                "tags": [
                    "Models"
                ],
                "summary": "Вернет список предков модели",
                "description": "Following permissions are required: **Models**",
                "operationId": "Models_ListModelAncestors",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Идентификатор модели, предков которого надо вернуть",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeNg"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeNg"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeNg"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/models": {
            "post": {
                "tags": [
                    "Models"
                ],
                "description": "Following permissions are required: **Models**, **ModelsEditor**",
                "operationId": "Models_CreateModel",
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeNg"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeNg"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeNg"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/NodeNg"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeNg"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeNg"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeNg"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Models"
                ],
                "summary": "Удаляет коллекцию моделей",
                "description": "Following permissions are required: **Models**, **ModelsEditor**",
                "operationId": "Models_DeleteModels",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Коллекция идентификаторов моделей",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/models/files": {
            "get": {
                "tags": [
                    "Models"
                ],
                "description": "Following permissions are required: **Models**, **ModelsEditor**",
                "operationId": "Models_ListAllFiles",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ModelFileNg"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ModelFileNg"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ModelFileNg"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Models"
                ],
                "description": "Following permissions are required: **Models**, **ModelsEditor**",
                "operationId": "Models_DeleteFiles",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/models/files/{id}": {
            "put": {
                "tags": [
                    "Models"
                ],
                "description": "Following permissions are required: **Models**, **ModelsEditor**",
                "operationId": "Models_UpdateFile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModelFileNg"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModelFileNg"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModelFileNg"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModelFileNg"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/models/{id}/files": {
            "get": {
                "tags": [
                    "Models"
                ],
                "description": "Following permissions are required: **Models**, **ModelsEditor**",
                "operationId": "Models_ListModelFiles",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ModelFileNg"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ModelFileNg"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ModelFileNg"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Models"
                ],
                "description": "Following permissions are required: **Models**, **ModelsEditor**",
                "operationId": "Models_AddFilesToModel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModelsAddRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModelsAddRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModelsAddRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModelsAddRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/models/{id}/content": {
            "get": {
                "tags": [
                    "Models"
                ],
                "description": "Following permissions are required: **Models**",
                "operationId": "Models_ListContentValues",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContentValue"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContentValue"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContentValue"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/models/files/{fileId}/versions": {
            "get": {
                "tags": [
                    "Models"
                ],
                "description": "Following permissions are required: **Models**, **ModelsEditor**",
                "operationId": "Models_ListFileVersions",
                "parameters": [
                    {
                        "name": "fileId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Content"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Content"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Content"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/models/types": {
            "get": {
                "tags": [
                    "Models"
                ],
                "description": "Following permissions are required: **Models**, **ModelsEditor**",
                "operationId": "Models_ListModelTypes",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseItemNg_Of_Int32"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseItemNg_Of_Int32"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseItemNg_Of_Int32"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Models"
                ],
                "description": "Following permissions are required: **Models**, **ModelsEditor**",
                "operationId": "Models_CreateModelType",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItemNg_Of_Int32"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItemNg_Of_Int32"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItemNg_Of_Int32"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItemNg_Of_Int32"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseItemNg_Of_Int32"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseItemNg_Of_Int32"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseItemNg_Of_Int32"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Conflict"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Models"
                ],
                "description": "Following permissions are required: **Models**, **ModelsEditor**",
                "operationId": "Models_DeleteModelTypes",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/models/types/{id}": {
            "put": {
                "tags": [
                    "Models"
                ],
                "description": "Following permissions are required: **Models**, **ModelsEditor**",
                "operationId": "Models_UpdateModelType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItemNg_Of_Int32"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItemNg_Of_Int32"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItemNg_Of_Int32"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseItemNg_Of_Int32"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Conflict"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/models/elements/links/auto": {
            "post": {
                "tags": [
                    "ModelsElements"
                ],
                "summary": "Создать задачу автосвязывания элементов и объектов",
                "description": "Following permissions are required: **Models**",
                "operationId": "ModelsElements_Create",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AutoLinkingMapping"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AutoLinkingMapping"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AutoLinkingMapping"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AutoLinkingMapping"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/LongRunningTaskInfo"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LongRunningTaskInfo"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LongRunningTaskInfo"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/models/elements/links/auto/{id}": {
            "post": {
                "tags": [
                    "ModelsElements"
                ],
                "summary": "Запустить задачу автосвязывания",
                "description": "Following permissions are required: **Models**",
                "operationId": "ModelsElements_StartAutoLinking",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ModelsElements"
                ],
                "summary": "Отменить и удалить задачу автосвязывания",
                "description": "Following permissions are required: **Models**",
                "operationId": "ModelsElements_CancelAutoLinking",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "get": {
                "tags": [
                    "ModelsElements"
                ],
                "summary": "Получить отсчет с результатами автосвязывания",
                "description": "Following permissions are required: **Models**",
                "operationId": "ModelsElements_GetAutoLinkingResult",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/models/elements/attributes": {
            "post": {
                "tags": [
                    "ModelsElements"
                ],
                "description": "Following permissions are required: **Models**",
                "operationId": "ModelsElements_ListElementAttributes",
                "parameters": [
                    {
                        "name": "X-HTTP-Method-Override",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "GET",
                            "x-ms-client-default": "GET"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ElementAttribute"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ElementAttribute"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ElementAttribute"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/models/elements/{id}/links": {
            "get": {
                "tags": [
                    "ModelsElements"
                ],
                "summary": "Получить объекты системы связанные с элементом 3d.",
                "description": "Following permissions are required: **Models**",
                "operationId": "ModelsElements_ListLinkedObjectIds",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Идентификатор элемента 3d.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/objects/{id}/elements/links": {
            "get": {
                "tags": [
                    "ModelsElements"
                ],
                "summary": "Получить элементы 3d связанные с объектом системы.",
                "description": "Following permissions are required: **Models**",
                "operationId": "ModelsElements_ListLinkedElementIds",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Идентификатор объекта системы.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/models/{id}/elements/children": {
            "get": {
                "tags": [
                    "ModelsElements"
                ],
                "summary": "Получить коллекцию детей элемента 3d.",
                "description": "Following permissions are required: **Models**",
                "operationId": "ModelsElements_ListElementChildren",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Идентификатор модели.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "elementId",
                        "in": "query",
                        "description": "Идентификатор элемента 3d.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ElementNode"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ElementNode"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ElementNode"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/models/{id}/elements/branch": {
            "post": {
                "tags": [
                    "ModelsElements"
                ],
                "summary": "Получить ветку дерева элементов, содержащую заданные узлы.",
                "description": "Following permissions are required: **Models**",
                "operationId": "ModelsElements_GetElementNode",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Идентификатор модели.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "X-HTTP-Method-Override",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "GET",
                            "x-ms-client-default": "GET"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Коллекция идентификаторов элементов 3d.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ElementNode"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ElementNode"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ElementNode"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/models/elements/links": {
            "post": {
                "tags": [
                    "ModelsElements"
                ],
                "summary": "Создание связей между элементами 3d и объектами системы.",
                "description": "Если между элементом и объектом уже существует связь, то эта пара пропускается.Following permissions are required: **Models**",
                "operationId": "ModelsElements_CreateLinks",
                "parameters": [
                    {
                        "name": "elementIds",
                        "in": "query",
                        "description": "Список идентификаторов элементов 3d.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                ],
                "requestBody": {
                    "description": "Список идентификаторов объектов системы.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/models/search/objects": {
            "get": {
                "tags": [
                    "ModelsSearch"
                ],
                "description": "Following permissions are required: **Models**",
                "operationId": "ModelsSearch_ListObjectNodes",
                "parameters": [
                    {
                        "name": "path",
                        "in": "query",
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioObjectNode"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioObjectNode"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioObjectNode"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/models/search/elements": {
            "post": {
                "tags": [
                    "ModelsSearch"
                ],
                "summary": "Поиск элементов",
                "description": "Following permissions are required: **Models**",
                "operationId": "ModelsSearch_ListElementLinkItems",
                "parameters": [
                    {
                        "name": "X-HTTP-Method-Override",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "GET",
                            "x-ms-client-default": "GET"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ElementLinkItem"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ElementLinkItem"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ElementLinkItem"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/objects/{id}/attributes": {
            "put": {
                "tags": [
                    "Objects"
                ],
                "summary": "Update object attributes.",
                "operationId": "Objects_Attributes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Object identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Array of attributes.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WioObjectAttribute"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WioObjectAttribute"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WioObjectAttribute"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WioObjectAttribute"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioObjectAttribute"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioObjectAttribute"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioObjectAttribute"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/objects/{id}": {
            "get": {
                "tags": [
                    "Objects"
                ],
                "summary": "Get object by identifier.",
                "operationId": "Objects_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Object identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/WioObject"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WioObject"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WioObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Objects"
                ],
                "summary": "Delete object.",
                "operationId": "Objects_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Object identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/objects": {
            "post": {
                "tags": [
                    "Objects"
                ],
                "summary": "Create object.",
                "operationId": "Objects_Create",
                "parameters": [
                    {
                        "name": "parent",
                        "in": "query",
                        "description": "Parent object identifier.",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Object information.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioObjectNode"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioObjectNode"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioObjectNode"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioObjectNode"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/WioObjectNode"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WioObjectNode"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WioObjectNode"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/objects/{id}/children/{leafId}": {
            "get": {
                "tags": [
                    "Objects"
                ],
                "summary": "Получить список дочерних узлов.",
                "operationId": "Objects_Children",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Идентификатор узла, чьи дочерние узлы нужно получить.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "leafId",
                        "in": "path",
                        "description": "Если указан, вернет ветку от родителя до указанного узла (необязательный, ограничение в автодокументации).",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioObjectNode"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioObjectNode"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioObjectNode"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/objects/{id}/path": {
            "get": {
                "tags": [
                    "Objects"
                ],
                "summary": "Получить информацию обо всех родительских узлах дерева (включая запрашиваемый узел) для запрашиваемого узла.",
                "operationId": "Objects_Path",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Идентификатор запрашиваемого узла.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/WioObjectPathInfo"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WioObjectPathInfo"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WioObjectPathInfo"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/objects/names": {
            "post": {
                "tags": [
                    "Objects"
                ],
                "summary": "Получить названия объектов по их идентификаторам.",
                "operationId": "Objects_Names",
                "parameters": [
                    {
                        "name": "X-HTTP-Method-Override",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "GET",
                            "x-ms-client-default": "GET"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Идентификаторы объектов.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/NodeDto"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/NodeDto"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/NodeDto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/objects/{id}/name": {
            "put": {
                "tags": [
                    "Objects"
                ],
                "summary": "Update name for object.",
                "operationId": "Objects_UpdateName",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Object identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "new",
                        "in": "query",
                        "description": "Object name.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/objects/{id}/parent": {
            "put": {
                "tags": [
                    "Objects"
                ],
                "summary": "Update parent for object.",
                "operationId": "Objects_UpdateParent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Object identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "parentId",
                        "in": "query",
                        "description": "Parent object identifier.",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/objects/{id}/class": {
            "put": {
                "tags": [
                    "Objects"
                ],
                "summary": "Update class for object.",
                "operationId": "Objects_UpdateClass",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Object identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "classId",
                        "in": "query",
                        "description": "Class identifier.",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/objects/{id}/collections": {
            "get": {
                "tags": [
                    "ObjectsCollections"
                ],
                "summary": "Get collection items.",
                "operationId": "ObjectsCollections_ListCollectionItems",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Host object identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "attributeId",
                        "in": "query",
                        "description": "Attribute identifier of type \"Objects collection\".",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Ordering dictionary.\r\n<remarks>Key - order by value (field or expression). Value - order direction value.</remarks>",
                        "style": "deepObject",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Skip",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Take",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryShapingResult_Of_CollectionItem"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryShapingResult_Of_CollectionItem"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryShapingResult_Of_CollectionItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ObjectsCollections"
                ],
                "summary": "Create collection item.",
                "operationId": "ObjectsCollections_CreateCollectionItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Host object identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "attributeId",
                        "in": "query",
                        "description": "Attribute identifier of type \"Objects collection\".",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Collection item to be created.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioObject"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioObject"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioObject"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioObject"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionItem"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionItem"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/objects/{id}/refcollections": {
            "post": {
                "tags": [
                    "ObjectsCollections"
                ],
                "summary": "Create reference collection items.",
                "operationId": "ObjectsCollections_CreateReferenceCollectionItems",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Host object identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "attributeId",
                        "in": "query",
                        "description": "Attribute identifier of type \"Objects collection\".",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "targets",
                        "in": "query",
                        "description": "Identifiers of objects to be added.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CollectionItem"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CollectionItem"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CollectionItem"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/objects/{id}/refcollections/viasearch": {
            "post": {
                "tags": [
                    "ObjectsCollections"
                ],
                "summary": "Create reference collection items from search query.",
                "operationId": "ObjectsCollections_CreateReferenceCollectionItemsFromSearch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Host object identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "attributeId",
                        "in": "query",
                        "description": "Attribute identifier of type \"Objects collection\".",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Search query.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/objects/{id}/permissions": {
            "get": {
                "tags": [
                    "ObjectsPermissions"
                ],
                "operationId": "ObjectsPermissions_GetPermissions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectSecurityInfo"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectSecurityInfo"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectSecurityInfo"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ObjectsPermissions"
                ],
                "operationId": "ObjectsPermissions_UpdatePermissions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PermissionManagementOperation"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PermissionManagementOperation"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PermissionManagementOperation"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PermissionManagementOperation"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectPermission"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectPermission"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectPermission"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/security/principals": {
            "get": {
                "tags": [
                    "ObjectsPermissions"
                ],
                "operationId": "ObjectsPermissions_ListPrincipals",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Principal"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Principal"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Principal"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/api/objects/search": {
            "post": {
                "tags": [
                    "ObjectsSearch"
                ],
                "summary": "Поиск объектов.",
                "operationId": "ObjectsSearch_Search",
                "parameters": [
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Ordering dictionary.\r\n<remarks>Key - order by value (field or expression). Value - order direction value.</remarks>",
                        "style": "deepObject",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Skip",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Take",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "X-HTTP-Method-Override",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "GET",
                            "x-ms-client-default": "GET"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Поисковый запрос.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryShapingResult_Of_SearchResultObject"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryShapingResult_Of_SearchResultObject"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryShapingResult_Of_SearchResultObject"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/objects/{id}/search": {
            "post": {
                "tags": [
                    "ObjectsSearch"
                ],
                "summary": "Контекстный поиск объектов.",
                "operationId": "ObjectsSearch_ContextSearch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Ordering dictionary.\r\n<remarks>Key - order by value (field or expression). Value - order direction value.</remarks>",
                        "style": "deepObject",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Skip",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Take",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "X-HTTP-Method-Override",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "GET",
                            "x-ms-client-default": "GET"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Поисковый запрос.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryShapingResult_Of_SearchResultObject"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryShapingResult_Of_SearchResultObject"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryShapingResult_Of_SearchResultObject"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/objects/search/ids": {
            "post": {
                "tags": [
                    "ObjectsSearch"
                ],
                "operationId": "ObjectsSearch_SearchIds",
                "parameters": [
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Ordering dictionary.\r\n<remarks>Key - order by value (field or expression). Value - order direction value.</remarks>",
                        "style": "deepObject",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Skip",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Take",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "X-HTTP-Method-Override",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "GET",
                            "x-ms-client-default": "GET"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryShapingResult_Of_Guid"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryShapingResult_Of_Guid"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryShapingResult_Of_Guid"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/objects/{id}/versions": {
            "get": {
                "tags": [
                    "ObjectsVersions"
                ],
                "summary": "Получить список версий объектов.",
                "operationId": "ObjectsVersions_GetQueryShapingResult",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Идентификатор объекта.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "Skip",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Take",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Получен список версий объектов.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryShapingResult_Of_WioObject"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryShapingResult_Of_WioObject"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryShapingResult_Of_WioObject"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "ObjectsVersions"
                ],
                "summary": "Создать архивный объект.",
                "operationId": "ObjectsVersions_Commit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Идентификатор объекта.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Команда выполнена успешно."
                    },
                    "400": {
                        "description": "Ошибка валидации.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/objects/{id}/restoreversion": {
            "post": {
                "tags": [
                    "ObjectsVersions"
                ],
                "summary": "Восстановить архивный объект в актуальный.",
                "description": "Восстанавливается класс, название, значения атрибутов(включая коллекции) объекта.",
                "operationId": "ObjectsVersions_RestoreVersion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Идентификатор архивного объекта.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Команда выполнена успешно."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Oбъект с указанными идентификатором не найден.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/reports/constraints": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "description": "Following permissions are required: **Reports**",
                "operationId": "Reports_GetReportConstraintOptions",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportConstraintOptions"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportConstraintOptions"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportConstraintOptions"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/permissions": {
            "get": {
                "tags": [
                    "ResourcePermissions"
                ],
                "description": "Following permissions are required: **Permissions_Read**",
                "operationId": "ResourcePermissions_ListPermissions",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Permission"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Permission"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Permission"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/effective-permissions": {
            "get": {
                "tags": [
                    "ResourcePermissions"
                ],
                "description": "Following permissions are required: **EffectivePermissions_Read**",
                "operationId": "ResourcePermissions_ListEffectivePermissions",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Permission"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Permission"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Permission"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/security/users/{id}/effective-permissions": {
            "get": {
                "tags": [
                    "ResourcePermissions"
                ],
                "description": "Following permissions are required: **SelfOrEffectivePermissions_ReadForAnyUser**",
                "operationId": "ResourcePermissions_ListUserEffectivePermissions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Permission"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Permission"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Permission"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/security/roles/{id}/effective-permissions": {
            "get": {
                "tags": [
                    "ResourcePermissions"
                ],
                "description": "Following permissions are required: **EffectivePermissions_ReadForAnyRole**",
                "operationId": "ResourcePermissions_ListRoleEffectivePermissions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Permission"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Permission"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Permission"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/security/roles": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "description": "Following permissions are required: **Security**",
                "operationId": "Roles_CreateRole",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioRole"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioRole"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioRole"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioRole"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/WioRole"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WioRole"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WioRole"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Roles"
                ],
                "description": "Following permissions are required: **Security**",
                "operationId": "Roles_DeleteRole",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/security/roles/{id}/users": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "description": "Following permissions are required: **Security**",
                "operationId": "Roles_ListUsersInRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioUser"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioUser"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioUser"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Roles"
                ],
                "description": "Following permissions are required: **Security**",
                "operationId": "Roles_AddUsers",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Roles"
                ],
                "description": "Following permissions are required: **Security**",
                "operationId": "Roles_RemoveUsers",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/security/users/{id}/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "description": "Following permissions are required: **SelfOrSecurity**",
                "operationId": "Roles_ListUserRoles",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioRole"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioRole"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WioRole"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Roles"
                ],
                "description": "Following permissions are required: **Security**",
                "operationId": "Roles_AddToRoles",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Roles"
                ],
                "description": "Following permissions are required: **Security**",
                "operationId": "Roles_RemoveFromRoles",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/settings/filestorage": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "operationId": "Settings_GetFileStorageOptions",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileStorageOptions"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileStorageOptions"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileStorageOptions"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Settings"
                ],
                "description": "Following permissions are required: **Security**",
                "operationId": "Settings_UpdateFileStorageOptions",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/FileStorageOptions"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FileStorageOptions"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FileStorageOptions"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/FileStorageOptions"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/wopi/options": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "operationId": "Settings_GetWopiOptions",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/WopiOptions"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WopiOptions"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WopiOptions"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Settings"
                ],
                "description": "Following permissions are required: **Security**",
                "operationId": "Settings_UpdateWopiOptions",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/WopiOptions"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WopiOptions"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WopiOptions"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/WopiOptions"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/settings/preview": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "operationId": "Settings_GetPreviewOptions",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreviewOptions"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreviewOptions"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreviewOptions"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Settings"
                ],
                "description": "Following permissions are required: **Security**",
                "operationId": "Settings_UpdatePreviewOptions",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PreviewOptions"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PreviewOptions"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PreviewOptions"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PreviewOptions"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/settings/data": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "operationId": "Settings_GetDataOptions",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataOptions"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataOptions"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataOptions"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Settings"
                ],
                "description": "Following permissions are required: **Security**",
                "operationId": "Settings_UpdateDataOptions",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/DataOptions"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DataOptions"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DataOptions"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/DataOptions"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/settings/branding": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "operationId": "Settings_GetBrandingOptions",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandingOptions"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandingOptions"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandingOptions"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Settings"
                ],
                "description": "Following permissions are required: **Security**",
                "operationId": "Settings_UpdateBrandingOptions",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BrandingOptions"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BrandingOptions"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BrandingOptions"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BrandingOptions"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/settings/clients": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "description": "Following permissions are required: **Security**",
                "operationId": "Settings_GetClientsOptions",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClientsOptions"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClientsOptions"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClientsOptions"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Settings"
                ],
                "description": "Following permissions are required: **Security**",
                "operationId": "Settings_UpdateClientsOptions",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClientsOptions"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClientsOptions"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClientsOptions"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClientsOptions"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/settings/licensing": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "operationId": "Settings_GetLicensingOptions",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicensingOptions"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicensingOptions"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicensingOptions"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Settings"
                ],
                "description": "Following permissions are required: **Security**",
                "operationId": "Settings_UpdateLicensingOptions",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/LicensingOptions"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LicensingOptions"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LicensingOptions"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/LicensingOptions"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/settings/uicomponents": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "operationId": "Settings_GetUIComponentsOptions",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/UIComponentsOptions"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UIComponentsOptions"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UIComponentsOptions"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Settings"
                ],
                "description": "Following permissions are required: **Security**",
                "operationId": "Settings_UpdateUIComponentsOptions",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UIComponentsOptions"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UIComponentsOptions"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UIComponentsOptions"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UIComponentsOptions"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/security/users/{id}/attributes": {
            "put": {
                "tags": [
                    "Users"
                ],
                "description": "Following permissions are required: **SelfOrSecurity**",
                "operationId": "Users_UpdateUserAttributes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/security/users/{id}/password": {
            "post": {
                "tags": [
                    "Users"
                ],
                "description": "Following permissions are required: **SelfOnly**",
                "operationId": "Users_ChangeUserPassword",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserChangePasswordCommand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserChangePasswordCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserChangePasswordCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserChangePasswordCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/security/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "description": "Following permissions are required: **SelfOrSecurity**",
                "operationId": "Users_GetUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/WioUser"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WioUser"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WioUser"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "description": "Following permissions are required: **Security**",
                "operationId": "Users_UpdateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioFullUser"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioFullUser"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioFullUser"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioFullUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/security/users": {
            "post": {
                "tags": [
                    "Users"
                ],
                "description": "Following permissions are required: **Security**",
                "operationId": "Users_CreateUser",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioFullUser"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioFullUser"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioFullUser"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/WioFullUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/WioUser"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WioUser"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WioUser"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "description": "Following permissions are required: **Security**",
                "operationId": "Users_DeleteUsers",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/structure/attributes ": {
            "post": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Удалить атрибуты",
                "description": "Following permissions are required: **Attribute_Delete**",
                "operationId": "Attributes_DeleteAttributes",
                "parameters": [
                    {
                        "name": "X-HTTP-Method-Override",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "DELETE",
                            "x-ms-client-default": "DELETE"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/structure/entities ": {
            "post": {
                "tags": [
                    "Classes"
                ],
                "summary": "Удалить классы",
                "description": "Following permissions are required: **Structure**",
                "operationId": "Classes_DeleteClasses",
                "parameters": [
                    {
                        "name": "X-HTTP-Method-Override",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "DELETE",
                            "x-ms-client-default": "DELETE"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/models/elements/links ": {
            "post": {
                "tags": [
                    "ModelsElements"
                ],
                "summary": "Получить связи между элементами 3d и объектами системы.",
                "description": "Following permissions are required: **Models**",
                "operationId": "ModelsElements_ListElementLinksContainer",
                "parameters": [
                    {
                        "name": "X-HTTP-Method-Override",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "GET",
                            "x-ms-client-default": "GET"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Список идентификаторов элементов 3d.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ElementLinksContainer"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ElementLinksContainer"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ElementLinksContainer"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        },
        "/api/models/elements/links  ": {
            "post": {
                "tags": [
                    "ModelsElements"
                ],
                "summary": "Удаление связей между элементами 3d и объектами системы.",
                "description": "Following permissions are required: **Models**",
                "operationId": "ModelsElements_DeleteLinks",
                "parameters": [
                    {
                        "name": "X-HTTP-Method-Override",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "DELETE",
                            "x-ms-client-default": "DELETE"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Словарь, в котором ключ - идентификатор элемента 3d, а значение - коллекция идентификаторов объектов системы.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "ns"
                        ]
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Attribute": {
                "required": [
                    "Id"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    },
                    "Description": {
                        "type": "string",
                        "nullable": true
                    },
                    "Type": {
                        "$ref": "#/components/schemas/AttributeTypeModel"
                    },
                    "Group": {
                        "$ref": "#/components/schemas/Group"
                    },
                    "Constraints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Constraint"
                        },
                        "nullable": true
                    },
                    "Unit": {
                        "$ref": "#/components/schemas/Unit"
                    }
                },
                "additionalProperties": false
            },
            "AttributeTypeModel": {
                "required": [
                    "Id"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "AutoLinkingMapping": {
                "type": "object",
                "properties": {
                    "Models": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "nullable": true
                    },
                    "Objects": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "nullable": true
                    },
                    "Classes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "nullable": true
                    },
                    "Conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AutoLinkingMappingCondition"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "AutoLinkingMappingCondition": {
                "required": [
                    "ClassAttributeId"
                ],
                "type": "object",
                "properties": {
                    "ElementAttribute": {
                        "$ref": "#/components/schemas/ElementAttribute"
                    },
                    "ClassAttributeId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "BaseItem": {
                "required": [
                    "Id",
                    "Name"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "description": "Идентификатор объекта",
                        "format": "uuid"
                    },
                    "Name": {
                        "maxLength": 450,
                        "minLength": 1,
                        "type": "string",
                        "description": "Название объекта"
                    },
                    "Description": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "Описание объекта",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Базовый класс сущности"
            },
            "BaseItemNg_Of_Guid": {
                "required": [
                    "Id",
                    "Name"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "description": "Идентификатор объекта",
                        "format": "uuid"
                    },
                    "Name": {
                        "maxLength": 450,
                        "minLength": 1,
                        "type": "string",
                        "description": "Название объекта"
                    },
                    "Description": {
                        "maxLength": 450,
                        "type": "string",
                        "description": "Описание объекта",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "BaseItemNg_Of_Int32": {
                "required": [
                    "Id",
                    "Name"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "description": "Идентификатор объекта",
                        "format": "int32"
                    },
                    "Name": {
                        "maxLength": 450,
                        "minLength": 1,
                        "type": "string",
                        "description": "Название объекта"
                    },
                    "Description": {
                        "maxLength": 450,
                        "type": "string",
                        "description": "Описание объекта",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "BaseItem_Of_Int32": {
                "required": [
                    "Id",
                    "Name"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "description": "Идентификатор объекта",
                        "format": "int32"
                    },
                    "Name": {
                        "maxLength": 450,
                        "minLength": 1,
                        "type": "string",
                        "description": "Название объекта"
                    },
                    "Description": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "Описание объекта",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Базовый класс"
            },
            "BaseItem_Of_Int64": {
                "required": [
                    "Id",
                    "Name"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "description": "Идентификатор объекта",
                        "format": "int64"
                    },
                    "Name": {
                        "maxLength": 450,
                        "minLength": 1,
                        "type": "string",
                        "description": "Название объекта"
                    },
                    "Description": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "Описание объекта",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Базовый класс"
            },
            "BrandingOptions": {
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string",
                        "nullable": true
                    },
                    "Logo": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Cardinality": {
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                "type": "integer",
                "description": "Кардинальность (ограничения, вида, атрибутов в виде)",
                "format": "int32",
                "x-enumNames": [
                    "Zero",
                    "One",
                    "OneOrMore",
                    "ZeroOrOne",
                    "ZeroOrMore"
                ],
                "x-ms-enum": {
                    "name": "Cardinality",
                    "modelAsString": false,
                    "values": [
                        {
                            "value": 0,
                            "name": "Zero",
                            "description": "Zero = 0"
                        },
                        {
                            "value": 1,
                            "name": "One",
                            "description": "One = 1"
                        },
                        {
                            "value": 2,
                            "name": "OneOrMore",
                            "description": "OneOrMore = 2"
                        },
                        {
                            "value": 3,
                            "name": "ZeroOrOne",
                            "description": "ZeroOrOne = 3"
                        },
                        {
                            "value": 4,
                            "name": "ZeroOrMore",
                            "description": "ZeroOrMore = 4"
                        }
                    ]
                }
            },
            "ClientCredentials": {
                "type": "object",
                "properties": {
                    "Secret": {
                        "type": "string",
                        "description": "Если секрет не указан, клиент считается публичным, и для него возможен только Implicit Flow",
                        "nullable": true
                    },
                    "RedirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ClientsOptions": {
                "required": [
                    "TokenLifetime"
                ],
                "type": "object",
                "properties": {
                    "Credentials": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ClientCredentials"
                        },
                        "description": "clientId/secret dictionary",
                        "nullable": true
                    },
                    "TokenLifetime": {
                        "type": "integer",
                        "description": "Время жизни токена с момента его получения, в секундах",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "CollectionItem": {
                "required": [
                    "Id",
                    "Name"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "description": "Идентификатор объекта",
                        "format": "uuid"
                    },
                    "Name": {
                        "maxLength": 450,
                        "minLength": 1,
                        "type": "string",
                        "description": "Название объекта"
                    },
                    "Description": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "Описание объекта",
                        "nullable": true
                    },
                    "Object": {
                        "$ref": "#/components/schemas/WioObject"
                    }
                },
                "additionalProperties": false,
                "description": "Элемент коллекции"
            },
            "Constraint": {
                "required": [
                    "Type"
                ],
                "type": "object",
                "properties": {
                    "Type": {
                        "$ref": "#/components/schemas/ConstraintType"
                    },
                    "EntityId": {
                        "type": "string",
                        "description": "Значение ограничения по классу",
                        "format": "uuid",
                        "nullable": true
                    },
                    "ObjectRootId": {
                        "type": "string",
                        "description": "Значение ограничения по корню поддерева возможных значений",
                        "format": "uuid",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Ограничение значения атрибута\r\n<br>Если Type = Entity, то EntityId обязателен, ObjectRootId должен быть `null`<br>Если Type = ObjectRoot, то ObjectRootId обязателен, EntityId должен быть `null`"
            },
            "ConstraintType": {
                "enum": [
                    1,
                    3
                ],
                "type": "integer",
                "description": "Тип ограничения значения атрибута",
                "format": "int32",
                "x-enumNames": [
                    "Entity",
                    "ObjectRoot"
                ],
                "x-ms-enum": {
                    "name": "ConstraintType",
                    "modelAsString": false,
                    "values": [
                        {
                            "value": 1,
                            "name": "Entity",
                            "description": "Entity = 1"
                        },
                        {
                            "value": 3,
                            "name": "ObjectRoot",
                            "description": "ObjectRoot = 3"
                        }
                    ]
                }
            },
            "Content": {
                "required": [
                    "Id",
                    "Size",
                    "Timestamp",
                    "Version"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    },
                    "MediaType": {
                        "type": "string",
                        "nullable": true
                    },
                    "Extension": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "Hash": {
                        "type": "string",
                        "nullable": true
                    },
                    "Version": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Timestamp": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "ContentValue": {
                "required": [
                    "Id",
                    "Name"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "description": "Идентификатор объекта",
                        "format": "uuid"
                    },
                    "Name": {
                        "maxLength": 450,
                        "minLength": 1,
                        "type": "string",
                        "description": "Название объекта"
                    },
                    "Description": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "Описание объекта",
                        "nullable": true
                    },
                    "MediaType": {
                        "type": "string",
                        "description": "Тип содержимого",
                        "nullable": true
                    },
                    "Extension": {
                        "type": "string",
                        "description": "Расширение файла",
                        "nullable": true,
                        "readOnly": true
                    },
                    "Hash": {
                        "type": "string",
                        "description": "Хэш соджержимого",
                        "nullable": true
                    },
                    "Version": {
                        "type": "integer",
                        "description": "Версия содержимого",
                        "format": "int32"
                    },
                    "Size": {
                        "type": "integer",
                        "description": "Размер содержимого",
                        "format": "int64"
                    },
                    "TempToken": {
                        "type": "string",
                        "description": "Токен используется для загрузки контента через временные файлы",
                        "format": "uuid",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Бинарный контент"
            },
            "Culture": {
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string",
                        "description": "Get culture name.",
                        "nullable": true,
                        "readOnly": true
                    },
                    "NativeName": {
                        "type": "string",
                        "description": "Get culture native name.",
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents culture model."
            },
            "DataOptions": {
                "required": [
                    "CommandTimeout"
                ],
                "type": "object",
                "properties": {
                    "CommandTimeout": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "DomainSorting": {
                        "$ref": "#/components/schemas/DomainSortingOptions"
                    }
                },
                "additionalProperties": false
            },
            "DomainSortingOptions": {
                "required": [
                    "SortBy"
                ],
                "type": "object",
                "properties": {
                    "SortBy": {
                        "type": "string",
                        "description": "AttributeId",
                        "format": "uuid"
                    },
                    "Desc": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "ElementAttribute": {
                "required": [
                    "Type"
                ],
                "type": "object",
                "properties": {
                    "Type": {
                        "$ref": "#/components/schemas/ElementAttributeType"
                    },
                    "Name": {
                        "type": "string",
                        "description": "Получает и задаёт название свойства.\r\n<remarks>Используется в случае когда `ElementAttributeType == ElementAttributeType.Property`</remarks>",
                        "nullable": true
                    },
                    "Description": {
                        "type": "string",
                        "description": "Получает и задаёт описание свойства.\r\n<remarks>Используется в случае когда `ElementAttributeType == ElementAttributeType.Property`</remarks>",
                        "nullable": true
                    },
                    "DisplayName": {
                        "type": "string",
                        "description": "Калькулируемое свойство для отображения и сортировки",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ElementAttributeType": {
                "enum": [
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                "type": "integer",
                "description": "Тип сущности, используемой для сопоставления со значением маппинга.",
                "format": "int32",
                "x-enumNames": [
                    "CadSystem",
                    "ElementName",
                    "ClassCode",
                    "ClassDescription",
                    "Property"
                ],
                "x-ms-enum": {
                    "name": "ElementAttributeType",
                    "modelAsString": false,
                    "values": [
                        {
                            "value": 1,
                            "name": "CadSystem",
                            "description": "CadSystem = 1"
                        },
                        {
                            "value": 2,
                            "name": "ElementName",
                            "description": "ElementName = 2"
                        },
                        {
                            "value": 3,
                            "name": "ClassCode",
                            "description": "ClassCode = 3"
                        },
                        {
                            "value": 4,
                            "name": "ClassDescription",
                            "description": "ClassDescription = 4"
                        },
                        {
                            "value": 5,
                            "name": "Property",
                            "description": "Property = 5"
                        }
                    ]
                }
            },
            "ElementLinkItem": {
                "required": [
                    "Id",
                    "Name"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "description": "Идентификатор объекта",
                        "format": "int64"
                    },
                    "Name": {
                        "maxLength": 450,
                        "minLength": 1,
                        "type": "string",
                        "description": "Название объекта"
                    },
                    "Description": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "Описание объекта",
                        "nullable": true
                    },
                    "ContentType": {
                        "$ref": "#/components/schemas/ModelContentType"
                    },
                    "Ids": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ElementLinksContainer": {
                "required": [
                    "Id",
                    "Name"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "description": "Идентификатор объекта",
                        "format": "int64"
                    },
                    "Name": {
                        "maxLength": 450,
                        "minLength": 1,
                        "type": "string",
                        "description": "Название объекта"
                    },
                    "Description": {
                        "maxLength": 450,
                        "type": "string",
                        "description": "Описание объекта",
                        "nullable": true
                    },
                    "Links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BaseItemNg_Of_Guid"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ElementNode": {
                "required": [
                    "HasChildren",
                    "Id",
                    "Mapped"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "description": "Получает и задаёт идентификатор элемента.",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string",
                        "description": "Получает и задаёт название элемента.",
                        "nullable": true
                    },
                    "HasChildren": {
                        "type": "boolean",
                        "description": "Получает и задаёт признак наличия потомков."
                    },
                    "Mapped": {
                        "type": "boolean",
                        "description": "Получает и задаёт признак наличия маппинга классов."
                    },
                    "Children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ElementNode"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Представляет элемент дерева элементов p3db."
            },
            "FileStorageOptions": {
                "type": "object",
                "properties": {
                    "PanoPath": {
                        "type": "string",
                        "description": "Папка для кеширования файлов распакованного пакета панорам.",
                        "nullable": true
                    },
                    "TempPath": {
                        "type": "string",
                        "description": "Папка для временных файлов.",
                        "nullable": true
                    },
                    "UploadPath": {
                        "type": "string",
                        "description": "Папка для хранения файлов, которые пользователь загружает из браузера.",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Globalization": {
                "type": "object",
                "properties": {
                    "DefaultCulture": {
                        "$ref": "#/components/schemas/Culture"
                    },
                    "SupportedCultures": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Culture"
                        },
                        "description": "Get supported cultures.",
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents globalization model."
            },
            "Group": {
                "required": [
                    "Id"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    },
                    "Description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "IGuidNode": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "Icon": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "Icon": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents Icon model."
            },
            "LicensingOptions": {
                "type": "object",
                "properties": {
                    "Server": {
                        "type": "string",
                        "nullable": true
                    },
                    "Client": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "LockType": {
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                "type": "integer",
                "description": "Тип блокировки сущности",
                "format": "int32",
                "x-enumNames": [
                    "None",
                    "SyncMaster",
                    "SyncSlave",
                    "Delete",
                    "Update"
                ],
                "x-ms-enum": {
                    "name": "LockType",
                    "modelAsString": false,
                    "values": [
                        {
                            "value": 0,
                            "name": "None",
                            "description": "None = 0"
                        },
                        {
                            "value": 1,
                            "name": "SyncMaster",
                            "description": "SyncMaster = 1"
                        },
                        {
                            "value": 2,
                            "name": "SyncSlave",
                            "description": "SyncSlave = 2"
                        },
                        {
                            "value": 3,
                            "name": "Delete",
                            "description": "Delete = 3"
                        },
                        {
                            "value": 4,
                            "name": "Update",
                            "description": "Update = 4"
                        }
                    ]
                }
            },
            "LongRunningTaskInfo": {
                "required": [
                    "Id"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false,
                "description": "Информация о созданной долгоиграющей задаче"
            },
            "ModelContentType": {
                "required": [
                    "Id"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ModelFileNg": {
                "required": [
                    "ContentId",
                    "ContentSize",
                    "ContentVersion",
                    "Id",
                    "Inherited",
                    "ModelId",
                    "Name",
                    "Timestamp"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "description": "Идентификатор объекта",
                        "format": "int32"
                    },
                    "Name": {
                        "maxLength": 450,
                        "minLength": 1,
                        "type": "string",
                        "description": "Название объекта"
                    },
                    "Description": {
                        "maxLength": 450,
                        "type": "string",
                        "description": "Описание объекта",
                        "nullable": true
                    },
                    "Inherited": {
                        "type": "boolean"
                    },
                    "ModelId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ContentId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "ContentSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ContentVersion": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "ModelsAddRequest": {
                "type": "object",
                "properties": {
                    "ModelIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "nullable": true
                    },
                    "ModelFileIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "NodeDto": {
                "required": [
                    "Id",
                    "Name"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "description": "Идентификатор объекта",
                        "format": "uuid"
                    },
                    "Name": {
                        "maxLength": 450,
                        "minLength": 1,
                        "type": "string",
                        "description": "Название объекта"
                    },
                    "Description": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "Описание объекта",
                        "nullable": true
                    },
                    "Children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IGuidNode"
                        },
                        "nullable": true
                    },
                    "HasChildren": {
                        "type": "boolean"
                    },
                    "Level": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Icon": {
                        "type": "string",
                        "nullable": true
                    },
                    "Type": {
                        "$ref": "#/components/schemas/NodeType"
                    },
                    "EffectivePermissions": {
                        "$ref": "#/components/schemas/ObjectPermission"
                    }
                },
                "additionalProperties": false
            },
            "NodeNg": {
                "required": [
                    "Id",
                    "Name"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "description": "Идентификатор объекта",
                        "format": "int64"
                    },
                    "Name": {
                        "maxLength": 450,
                        "minLength": 1,
                        "type": "string",
                        "description": "Название объекта"
                    },
                    "Description": {
                        "maxLength": 450,
                        "type": "string",
                        "description": "Описание объекта",
                        "nullable": true
                    },
                    "Children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeNg"
                        },
                        "nullable": true
                    },
                    "HasChildren": {
                        "type": "boolean"
                    },
                    "Level": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Icon": {
                        "type": "string",
                        "nullable": true
                    },
                    "Type": {
                        "$ref": "#/components/schemas/NodeType"
                    }
                },
                "additionalProperties": false
            },
            "NodeType": {
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                "type": "integer",
                "format": "int32",
                "x-enumNames": [
                    "None",
                    "System",
                    "Folder",
                    "Object",
                    "Report",
                    "Model",
                    "Sensor"
                ],
                "x-ms-enum": {
                    "name": "NodeType",
                    "modelAsString": false,
                    "values": [
                        {
                            "value": 0,
                            "name": "None",
                            "description": "None = 0"
                        },
                        {
                            "value": 1,
                            "name": "System",
                            "description": "System = 1"
                        },
                        {
                            "value": 2,
                            "name": "Folder",
                            "description": "Folder = 2"
                        },
                        {
                            "value": 3,
                            "name": "Object",
                            "description": "Object = 3"
                        },
                        {
                            "value": 4,
                            "name": "Report",
                            "description": "Report = 4"
                        },
                        {
                            "value": 5,
                            "name": "Model",
                            "description": "Model = 5"
                        },
                        {
                            "value": 6,
                            "name": "Sensor",
                            "description": "Sensor = 6"
                        }
                    ]
                }
            },
            "ObjectPermission": {
                "enum": [
                    0,
                    1,
                    2,
                    4,
                    8,
                    16,
                    32,
                    64,
                    128,
                    256,
                    512,
                    1024,
                    2048,
                    4096,
                    8191
                ],
                "type": "integer",
                "description": "Полномочия на объект",
                "format": "int32",
                "x-enumNames": [
                    "None",
                    "Read",
                    "Update",
                    "Delete",
                    "ChildrenCreate",
                    "ChildrenRead",
                    "ChildrenDelete",
                    "ClassUpdate",
                    "ParentUpdate",
                    "PermissionsUpdate",
                    "VersionRead",
                    "VersionCreate",
                    "ExclusiveChange",
                    "ExclusiveChangeRevoke",
                    "Full"
                ],
                "x-ms-enum": {
                    "name": "ObjectPermission",
                    "modelAsString": false,
                    "values": [
                        {
                            "value": 0,
                            "name": "None",
                            "description": "None = 0"
                        },
                        {
                            "value": 1,
                            "name": "Read",
                            "description": "Read = 1"
                        },
                        {
                            "value": 2,
                            "name": "Update",
                            "description": "Update = 2"
                        },
                        {
                            "value": 4,
                            "name": "Delete",
                            "description": "Delete = 4"
                        },
                        {
                            "value": 8,
                            "name": "ChildrenCreate",
                            "description": "ChildrenCreate = 8"
                        },
                        {
                            "value": 16,
                            "name": "ChildrenRead",
                            "description": "ChildrenRead = 16"
                        },
                        {
                            "value": 32,
                            "name": "ChildrenDelete",
                            "description": "ChildrenDelete = 32"
                        },
                        {
                            "value": 64,
                            "name": "ClassUpdate",
                            "description": "ClassUpdate = 64"
                        },
                        {
                            "value": 128,
                            "name": "ParentUpdate",
                            "description": "ParentUpdate = 128"
                        },
                        {
                            "value": 256,
                            "name": "PermissionsUpdate",
                            "description": "PermissionsUpdate = 256"
                        },
                        {
                            "value": 512,
                            "name": "VersionRead",
                            "description": "VersionRead = 512"
                        },
                        {
                            "value": 1024,
                            "name": "VersionCreate",
                            "description": "VersionCreate = 1024"
                        },
                        {
                            "value": 2048,
                            "name": "ExclusiveChange",
                            "description": "ExclusiveChange = 2048"
                        },
                        {
                            "value": 4096,
                            "name": "ExclusiveChangeRevoke",
                            "description": "ExclusiveChangeRevoke = 4096"
                        },
                        {
                            "value": 8191,
                            "name": "Full",
                            "description": "Full = 8191"
                        }
                    ]
                }
            },
            "ObjectPermissionInfo": {
                "required": [
                    "Id",
                    "IsInherited",
                    "Name",
                    "State"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "$ref": "#/components/schemas/ObjectPermission"
                    },
                    "Name": {
                        "maxLength": 450,
                        "minLength": 1,
                        "type": "string",
                        "description": "Название объекта"
                    },
                    "Description": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "Описание объекта",
                        "nullable": true
                    },
                    "State": {
                        "$ref": "#/components/schemas/ObjectPermissionState"
                    },
                    "InheritedState": {
                        "$ref": "#/components/schemas/ObjectPermissionState"
                    },
                    "IsInherited": {
                        "type": "boolean",
                        "description": "Унаследовано ли это полномочме",
                        "readOnly": true
                    }
                },
                "additionalProperties": false,
                "description": "Данные о полномочии"
            },
            "ObjectPermissionState": {
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                "type": "integer",
                "format": "int32",
                "x-enumNames": [
                    "NotSet",
                    "InheritedAllow",
                    "InheritedDeny",
                    "ExplicitAllow",
                    "ExplicitDeny"
                ],
                "x-ms-enum": {
                    "name": "ObjectPermissionState",
                    "modelAsString": false,
                    "values": [
                        {
                            "value": 0,
                            "name": "NotSet",
                            "description": "NotSet = 0"
                        },
                        {
                            "value": 1,
                            "name": "InheritedAllow",
                            "description": "InheritedAllow = 1"
                        },
                        {
                            "value": 2,
                            "name": "InheritedDeny",
                            "description": "InheritedDeny = 2"
                        },
                        {
                            "value": 3,
                            "name": "ExplicitAllow",
                            "description": "ExplicitAllow = 3"
                        },
                        {
                            "value": 4,
                            "name": "ExplicitDeny",
                            "description": "ExplicitDeny = 4"
                        }
                    ]
                }
            },
            "ObjectSecurityInfo": {
                "type": "object",
                "properties": {
                    "PrincipalObjectPermissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PrincipalPermissionInfo_Of_ObjectPermissionInfo"
                        },
                        "nullable": true
                    },
                    "EffectivePermissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PrincipalPermissionInfo_Of_ObjectPermissionInfo"
                        },
                        "nullable": true
                    },
                    "DefaultPermissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ObjectPermissionInfo"
                        },
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "Permission": {
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "Description": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "PermissionManagementOperation": {
                "required": [
                    "Operation"
                ],
                "type": "object",
                "properties": {
                    "Operation": {
                        "$ref": "#/components/schemas/PermissionOperation"
                    },
                    "PrincipalPermissionInfo": {
                        "$ref": "#/components/schemas/PrincipalPermissionInfo_Of_ObjectPermissionInfo"
                    }
                },
                "additionalProperties": false
            },
            "PermissionOperation": {
                "enum": [
                    1,
                    2,
                    3
                ],
                "type": "integer",
                "format": "int32",
                "x-enumNames": [
                    "Create",
                    "Update",
                    "Delete"
                ],
                "x-ms-enum": {
                    "name": "PermissionOperation",
                    "modelAsString": false,
                    "values": [
                        {
                            "value": 1,
                            "name": "Create",
                            "description": "Create = 1"
                        },
                        {
                            "value": 2,
                            "name": "Update",
                            "description": "Update = 2"
                        },
                        {
                            "value": 3,
                            "name": "Delete",
                            "description": "Delete = 3"
                        }
                    ]
                }
            },
            "PreviewOptions": {
                "type": "object",
                "properties": {
                    "DefaultAutoLimit": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "additionalProperties": false,
                "description": "Represents preview options."
            },
            "Principal": {
                "required": [
                    "Id",
                    "Name",
                    "Type"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "description": "Идентификатор объекта",
                        "format": "int32"
                    },
                    "Name": {
                        "maxLength": 450,
                        "minLength": 1,
                        "type": "string",
                        "description": "Название объекта"
                    },
                    "Description": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "Описание объекта",
                        "nullable": true
                    },
                    "Type": {
                        "$ref": "#/components/schemas/PrincipalType"
                    }
                },
                "additionalProperties": false,
                "description": "Субъект доступа"
            },
            "PrincipalPermissionInfo_Of_ObjectPermissionInfo": {
                "required": [
                    "IsInherited"
                ],
                "type": "object",
                "properties": {
                    "Principal": {
                        "$ref": "#/components/schemas/Principal"
                    },
                    "Permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ObjectPermissionInfo"
                        },
                        "description": "Установленные полномочия",
                        "nullable": true
                    },
                    "IsInherited": {
                        "type": "boolean",
                        "description": "Является ли данный principal унаследованным"
                    }
                },
                "additionalProperties": false,
                "description": "Информация о полномочиях объекта"
            },
            "PrincipalType": {
                "enum": [
                    0,
                    1
                ],
                "type": "integer",
                "format": "int32",
                "x-enumNames": [
                    "Role",
                    "User"
                ],
                "x-ms-enum": {
                    "name": "PrincipalType",
                    "modelAsString": false,
                    "values": [
                        {
                            "value": 0,
                            "name": "Role",
                            "description": "Role = 0"
                        },
                        {
                            "value": 1,
                            "name": "User",
                            "description": "User = 1"
                        }
                    ]
                }
            },
            "ProblemDetails": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "detail": {
                        "type": "string",
                        "nullable": true
                    },
                    "instance": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": {}
            },
            "QueryShapingResult_Of_CollectionItem": {
                "required": [
                    "Total"
                ],
                "type": "object",
                "properties": {
                    "Result": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CollectionItem"
                        },
                        "nullable": true
                    },
                    "Total": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "QueryShapingResult_Of_Guid": {
                "required": [
                    "Total"
                ],
                "type": "object",
                "properties": {
                    "Result": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "nullable": true
                    },
                    "Total": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "QueryShapingResult_Of_SearchResultObject": {
                "required": [
                    "Total"
                ],
                "type": "object",
                "properties": {
                    "Result": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SearchResultObject"
                        },
                        "nullable": true
                    },
                    "Total": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "QueryShapingResult_Of_WioObject": {
                "required": [
                    "Total"
                ],
                "type": "object",
                "properties": {
                    "Result": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WioObject"
                        },
                        "nullable": true
                    },
                    "Total": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "ReportConstraintOptions": {
                "type": "object",
                "additionalProperties": false
            },
            "SearchCondition": {
                "required": [
                    "Type"
                ],
                "type": "object",
                "properties": {
                    "Type": {
                        "$ref": "#/components/schemas/SearchConditionType"
                    },
                    "Value": {
                        "type": "string",
                        "nullable": true
                    },
                    "Direction": {
                        "$ref": "#/components/schemas/SearchDirectionType"
                    },
                    "Attribute": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "Operator": {
                        "$ref": "#/components/schemas/SearchOperatorType"
                    },
                    "Logic": {
                        "$ref": "#/components/schemas/SearchLogicType"
                    },
                    "Group": {
                        "type": "string",
                        "nullable": true
                    },
                    "Contextual": {
                        "type": "boolean",
                        "default": false
                    },
                    "Conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SearchCondition"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "SearchConditionType": {
                "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    15,
                    16,
                    17
                ],
                "type": "integer",
                "description": "Тип условия",
                "format": "int32",
                "x-enumNames": [
                    "Attribute",
                    "Name",
                    "Level",
                    "Parent",
                    "Entity",
                    "CreatedBy",
                    "CreationDate",
                    "Descendants",
                    "Ancestors",
                    "ModificationDate",
                    "ElementLink",
                    "Id",
                    "Version",
                    "VersionTimestamp"
                ],
                "x-ms-enum": {
                    "name": "SearchConditionType",
                    "modelAsString": false,
                    "values": [
                        {
                            "value": 1,
                            "name": "Attribute",
                            "description": "Attribute = 1"
                        },
                        {
                            "value": 2,
                            "name": "Name",
                            "description": "Name = 2"
                        },
                        {
                            "value": 3,
                            "name": "Level",
                            "description": "Level = 3"
                        },
                        {
                            "value": 4,
                            "name": "Parent",
                            "description": "Parent = 4"
                        },
                        {
                            "value": 5,
                            "name": "Entity",
                            "description": "Entity = 5"
                        },
                        {
                            "value": 6,
                            "name": "CreatedBy",
                            "description": "CreatedBy = 6"
                        },
                        {
                            "value": 7,
                            "name": "CreationDate",
                            "description": "CreationDate = 7"
                        },
                        {
                            "value": 8,
                            "name": "Descendants",
                            "description": "Descendants = 8"
                        },
                        {
                            "value": 9,
                            "name": "Ancestors",
                            "description": "Ancestors = 9"
                        },
                        {
                            "value": 10,
                            "name": "ModificationDate",
                            "description": "ModificationDate = 10"
                        },
                        {
                            "value": 11,
                            "name": "ElementLink",
                            "description": "ElementLink = 11"
                        },
                        {
                            "value": 15,
                            "name": "Id",
                            "description": "Id = 15"
                        },
                        {
                            "value": 16,
                            "name": "Version",
                            "description": "Version = 16"
                        },
                        {
                            "value": 17,
                            "name": "VersionTimestamp",
                            "description": "VersionTimestamp = 17"
                        }
                    ]
                }
            },
            "SearchDirectionType": {
                "enum": [
                    0,
                    1,
                    2
                ],
                "type": "integer",
                "format": "int32",
                "x-enumNames": [
                    "None",
                    "Inside",
                    "Outsite"
                ],
                "x-ms-enum": {
                    "name": "SearchDirectionType",
                    "modelAsString": false,
                    "values": [
                        {
                            "value": 0,
                            "name": "None",
                            "description": "None = 0"
                        },
                        {
                            "value": 1,
                            "name": "Inside",
                            "description": "Inside = 1"
                        },
                        {
                            "value": 2,
                            "name": "Outsite",
                            "description": "Outsite = 2"
                        }
                    ]
                }
            },
            "SearchFilter": {
                "required": [
                    "Type"
                ],
                "type": "object",
                "properties": {
                    "Type": {
                        "$ref": "#/components/schemas/SearchConditionType"
                    },
                    "Value": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "SearchLogicType": {
                "enum": [
                    0,
                    1,
                    2
                ],
                "type": "integer",
                "format": "int32",
                "x-enumNames": [
                    "None",
                    "Or",
                    "And"
                ],
                "x-ms-enum": {
                    "name": "SearchLogicType",
                    "modelAsString": false,
                    "values": [
                        {
                            "value": 0,
                            "name": "None",
                            "description": "None = 0"
                        },
                        {
                            "value": 1,
                            "name": "Or",
                            "description": "Or = 1"
                        },
                        {
                            "value": 2,
                            "name": "And",
                            "description": "And = 2"
                        }
                    ]
                }
            },
            "SearchOperatorType": {
                "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15
                ],
                "type": "integer",
                "format": "int32",
                "x-enumNames": [
                    "Equals",
                    "NotEquals",
                    "Greater",
                    "Less",
                    "GreaterOrEqual",
                    "LessOrEqual",
                    "Exists",
                    "NotExists",
                    "StartsWith",
                    "Contains",
                    "NotContains",
                    "ContainsObject",
                    "NotContainsObject",
                    "ContainsWord",
                    "NotContainsWord"
                ],
                "x-ms-enum": {
                    "name": "SearchOperatorType",
                    "modelAsString": false,
                    "values": [
                        {
                            "value": 1,
                            "name": "Equals",
                            "description": "Equals = 1"
                        },
                        {
                            "value": 2,
                            "name": "NotEquals",
                            "description": "NotEquals = 2"
                        },
                        {
                            "value": 3,
                            "name": "Greater",
                            "description": "Greater = 3"
                        },
                        {
                            "value": 4,
                            "name": "Less",
                            "description": "Less = 4"
                        },
                        {
                            "value": 5,
                            "name": "GreaterOrEqual",
                            "description": "GreaterOrEqual = 5"
                        },
                        {
                            "value": 6,
                            "name": "LessOrEqual",
                            "description": "LessOrEqual = 6"
                        },
                        {
                            "value": 7,
                            "name": "Exists",
                            "description": "Exists = 7"
                        },
                        {
                            "value": 8,
                            "name": "NotExists",
                            "description": "NotExists = 8"
                        },
                        {
                            "value": 9,
                            "name": "StartsWith",
                            "description": "StartsWith = 9"
                        },
                        {
                            "value": 10,
                            "name": "Contains",
                            "description": "Contains = 10"
                        },
                        {
                            "value": 11,
                            "name": "NotContains",
                            "description": "NotContains = 11"
                        },
                        {
                            "value": 12,
                            "name": "ContainsObject",
                            "description": "ContainsObject = 12"
                        },
                        {
                            "value": 13,
                            "name": "NotContainsObject",
                            "description": "NotContainsObject = 13"
                        },
                        {
                            "value": 14,
                            "name": "ContainsWord",
                            "description": "ContainsWord = 14"
                        },
                        {
                            "value": 15,
                            "name": "NotContainsWord",
                            "description": "NotContainsWord = 15"
                        }
                    ]
                }
            },
            "SearchQuery": {
                "type": "object",
                "properties": {
                    "Filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SearchFilter"
                        },
                        "nullable": true
                    },
                    "Conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SearchCondition"
                        },
                        "nullable": true
                    },
                    "Relationship": {
                        "$ref": "#/components/schemas/SearchRelationship"
                    },
                    "Queries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SearchQuery"
                        },
                        "nullable": true
                    },
                    "Mode": {
                        "$ref": "#/components/schemas/SearchQueryMode"
                    }
                },
                "additionalProperties": false
            },
            "SearchQueryMode": {
                "enum": [
                    0,
                    1,
                    2
                ],
                "type": "integer",
                "description": "Тип связи подчиненного набора данных",
                "format": "int32",
                "x-enumNames": [
                    "ActualOnly",
                    "ActualAndVersioned",
                    "VersionedOnly"
                ],
                "x-ms-enum": {
                    "name": "SearchQueryMode",
                    "modelAsString": false,
                    "values": [
                        {
                            "value": 0,
                            "name": "ActualOnly",
                            "description": "ActualOnly = 0"
                        },
                        {
                            "value": 1,
                            "name": "ActualAndVersioned",
                            "description": "ActualAndVersioned = 1"
                        },
                        {
                            "value": 2,
                            "name": "VersionedOnly",
                            "description": "VersionedOnly = 2"
                        }
                    ]
                }
            },
            "SearchRelationship": {
                "required": [
                    "Type"
                ],
                "type": "object",
                "properties": {
                    "Type": {
                        "$ref": "#/components/schemas/SearchRelationshipType"
                    },
                    "Direction": {
                        "$ref": "#/components/schemas/SearchDirectionType"
                    },
                    "Attribute": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "SearchRelationshipType": {
                "enum": [
                    0,
                    1,
                    2,
                    3
                ],
                "type": "integer",
                "description": "Тип связи подчиненного набора данных",
                "format": "int32",
                "x-enumNames": [
                    "None",
                    "Attribute",
                    "Descendants",
                    "Ancestors"
                ],
                "x-ms-enum": {
                    "name": "SearchRelationshipType",
                    "modelAsString": false,
                    "values": [
                        {
                            "value": 0,
                            "name": "None",
                            "description": "None = 0"
                        },
                        {
                            "value": 1,
                            "name": "Attribute",
                            "description": "Attribute = 1"
                        },
                        {
                            "value": 2,
                            "name": "Descendants",
                            "description": "Descendants = 2"
                        },
                        {
                            "value": 3,
                            "name": "Ancestors",
                            "description": "Ancestors = 3"
                        }
                    ]
                }
            },
            "SearchResultObject": {
                "type": "object",
                "properties": {
                    "Object": {
                        "$ref": "#/components/schemas/WioObject"
                    },
                    "Parent": {
                        "$ref": "#/components/schemas/WioObject"
                    }
                },
                "additionalProperties": false
            },
            "ShapingResult_Of_Attribute": {
                "required": [
                    "Total"
                ],
                "type": "object",
                "properties": {
                    "Result": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attribute"
                        },
                        "nullable": true,
                        "readOnly": true
                    },
                    "Total": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "ShapingResult_Of_WioAttribute": {
                "required": [
                    "Total"
                ],
                "type": "object",
                "properties": {
                    "Result": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WioAttribute"
                        },
                        "nullable": true,
                        "readOnly": true
                    },
                    "Total": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "UIComponentsOptions": {
                "required": [
                    "UseDxGrid"
                ],
                "type": "object",
                "properties": {
                    "UseDxGrid": {
                        "type": "boolean",
                        "description": "Get or set use DxGrid flag."
                    }
                },
                "additionalProperties": false,
                "description": "Represents UI components options."
            },
            "Unit": {
                "required": [
                    "Id"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    },
                    "Description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "UpdateCultureCommand": {
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string",
                        "description": "Get or set culture name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents set culture model."
            },
            "UserChangePasswordCommand": {
                "type": "object",
                "properties": {
                    "CurrentPassword": {
                        "type": "string",
                        "description": "Current password.",
                        "nullable": true
                    },
                    "Password": {
                        "type": "string",
                        "description": "New password.",
                        "nullable": true
                    },
                    "ConfirmPassword": {
                        "type": "string",
                        "description": "New password confirm.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents user change password command."
            },
            "ViewerInstance_Of_Object": {
                "required": [
                    "Id"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    },
                    "Caption": {
                        "type": "string",
                        "nullable": true
                    },
                    "Icon": {
                        "type": "string",
                        "nullable": true
                    },
                    "Attributes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "nullable": true
                    },
                    "Settings": {
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "WioAttribute": {
                "required": [
                    "Id",
                    "Name",
                    "Type"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "description": "Идентификатор объекта",
                        "format": "uuid"
                    },
                    "Name": {
                        "maxLength": 450,
                        "minLength": 1,
                        "type": "string",
                        "description": "Название объекта"
                    },
                    "Description": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "Описание объекта",
                        "nullable": true
                    },
                    "Locked": {
                        "$ref": "#/components/schemas/LockType"
                    },
                    "Type": {
                        "$ref": "#/components/schemas/WioAttributeType"
                    },
                    "Constraints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Constraint"
                        },
                        "description": "Список ограничений",
                        "nullable": true
                    },
                    "Unit": {
                        "$ref": "#/components/schemas/BaseItem_Of_Int64"
                    },
                    "Group": {
                        "$ref": "#/components/schemas/BaseItem_Of_Int64"
                    }
                },
                "additionalProperties": false
            },
            "WioAttributeType": {
                "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    15
                ],
                "type": "integer",
                "description": "Тип атрибута",
                "format": "int32",
                "x-enumNames": [
                    "String",
                    "ObjectLink",
                    "Number",
                    "Date",
                    "Time",
                    "DateTime",
                    "Text",
                    "File",
                    "Collection",
                    "ReferenceCollection",
                    "Template"
                ],
                "x-ms-enum": {
                    "name": "WioAttributeType",
                    "modelAsString": false,
                    "values": [
                        {
                            "value": 2,
                            "name": "String",
                            "description": "String = 2"
                        },
                        {
                            "value": 8,
                            "name": "ObjectLink",
                            "description": "ObjectLink = 8"
                        },
                        {
                            "value": 1,
                            "name": "Number",
                            "description": "Number = 1"
                        },
                        {
                            "value": 3,
                            "name": "Date",
                            "description": "Date = 3"
                        },
                        {
                            "value": 4,
                            "name": "Time",
                            "description": "Time = 4"
                        },
                        {
                            "value": 5,
                            "name": "DateTime",
                            "description": "DateTime = 5"
                        },
                        {
                            "value": 6,
                            "name": "Text",
                            "description": "Text = 6"
                        },
                        {
                            "value": 7,
                            "name": "File",
                            "description": "File = 7"
                        },
                        {
                            "value": 9,
                            "name": "Collection",
                            "description": "Collection = 9"
                        },
                        {
                            "value": 10,
                            "name": "ReferenceCollection",
                            "description": "ReferenceCollection = 10"
                        },
                        {
                            "value": 15,
                            "name": "Template",
                            "description": "Template = 15"
                        }
                    ]
                }
            },
            "WioAttributeTypeInfo": {
                "required": [
                    "Type"
                ],
                "type": "object",
                "properties": {
                    "Type": {
                        "$ref": "#/components/schemas/WioAttributeType"
                    },
                    "Caption": {
                        "type": "string",
                        "description": "Название типа атрибута",
                        "nullable": true,
                        "readOnly": true
                    },
                    "SupportsUnits": {
                        "type": "boolean",
                        "description": "Поддерживает ли атрибут единицы измерения"
                    },
                    "IsScalar": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "Constraints": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Cardinality"
                        },
                        "description": "Настройки кардинальности ограничений",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Информация о типе атрибута"
            },
            "WioAttributeValidationRule": {
                "required": [
                    "Id",
                    "Type"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "Type": {
                        "$ref": "#/components/schemas/WioAttributeValidationType"
                    },
                    "Message": {
                        "type": "string",
                        "nullable": true
                    },
                    "Params": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "WioAttributeValidationType": {
                "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                "type": "integer",
                "format": "int32",
                "x-enumNames": [
                    "Required",
                    "Range",
                    "MinLength",
                    "MaxLength",
                    "Warning",
                    "Pattern"
                ],
                "x-ms-enum": {
                    "name": "WioAttributeValidationType",
                    "modelAsString": false,
                    "values": [
                        {
                            "value": 1,
                            "name": "Required",
                            "description": "Required = 1"
                        },
                        {
                            "value": 2,
                            "name": "Range",
                            "description": "Range = 2"
                        },
                        {
                            "value": 3,
                            "name": "MinLength",
                            "description": "MinLength = 3"
                        },
                        {
                            "value": 4,
                            "name": "MaxLength",
                            "description": "MaxLength = 4"
                        },
                        {
                            "value": 5,
                            "name": "Warning",
                            "description": "Warning = 5"
                        },
                        {
                            "value": 6,
                            "name": "Pattern",
                            "description": "Pattern = 6"
                        }
                    ]
                }
            },
            "WioEntity": {
                "required": [
                    "Id",
                    "Name"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "description": "Идентификатор объекта",
                        "format": "uuid"
                    },
                    "Name": {
                        "maxLength": 450,
                        "minLength": 1,
                        "type": "string",
                        "description": "Название объекта"
                    },
                    "Description": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "Описание объекта",
                        "nullable": true
                    },
                    "Locked": {
                        "$ref": "#/components/schemas/LockType"
                    },
                    "Parent": {
                        "$ref": "#/components/schemas/WioEntity"
                    },
                    "Level": {
                        "type": "integer",
                        "description": "Уровень узла в дереве классов",
                        "format": "int32"
                    },
                    "Icon": {
                        "type": "string",
                        "description": "Иконка сущности",
                        "nullable": true
                    },
                    "Attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/WioEntityAttribute"
                        },
                        "description": "Список атрибутов класса",
                        "nullable": true
                    },
                    "Viewers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewerInstance_Of_Object"
                        },
                        "description": "Список просмотрщиков",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Сущность - класс в понятии Inter Operation"
            },
            "WioEntityAttribute": {
                "required": [
                    "Id",
                    "Name",
                    "Type"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "description": "Идентификатор объекта",
                        "format": "uuid"
                    },
                    "Name": {
                        "maxLength": 450,
                        "minLength": 1,
                        "type": "string",
                        "description": "Название объекта"
                    },
                    "Description": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "Описание объекта",
                        "nullable": true
                    },
                    "Locked": {
                        "$ref": "#/components/schemas/LockType"
                    },
                    "Type": {
                        "$ref": "#/components/schemas/WioAttributeType"
                    },
                    "Constraints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Constraint"
                        },
                        "description": "Список ограничений",
                        "nullable": true
                    },
                    "Unit": {
                        "$ref": "#/components/schemas/BaseItem_Of_Int64"
                    },
                    "Group": {
                        "$ref": "#/components/schemas/BaseItem_Of_Int64"
                    },
                    "Inherited": {
                        "type": "boolean"
                    },
                    "Rules": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/WioAttributeValidationRule"
                        },
                        "description": "Правила валидации для атрибута",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "WioFullUser": {
                "required": [
                    "Credentials",
                    "Id",
                    "IsExternal",
                    "Name"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "description": "Идентификатор объекта",
                        "format": "int32"
                    },
                    "Name": {
                        "maxLength": 450,
                        "minLength": 1,
                        "type": "string",
                        "description": "Название объекта"
                    },
                    "Description": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "Описание объекта",
                        "nullable": true
                    },
                    "LockoutDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "LastActivity": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "IsExternal": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "Attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "nullable": true,
                        "readOnly": true
                    },
                    "Credentials": {
                        "$ref": "#/components/schemas/WioUserCredentials"
                    }
                },
                "additionalProperties": false
            },
            "WioObject": {
                "required": [
                    "Id",
                    "IsActualVersion",
                    "Name",
                    "Version",
                    "VersionTimestamp"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "description": "Идентификатор объекта",
                        "format": "uuid"
                    },
                    "Name": {
                        "maxLength": 450,
                        "minLength": 1,
                        "type": "string",
                        "description": "Название объекта"
                    },
                    "Description": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "Описание объекта",
                        "nullable": true
                    },
                    "Entity": {
                        "$ref": "#/components/schemas/WioEntity"
                    },
                    "Attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/WioObjectAttribute"
                        },
                        "description": "Список атрибутов с их значениями",
                        "nullable": true
                    },
                    "ModelLinks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ElementLinkItem"
                        },
                        "description": "Список ссылок на 3D моделях",
                        "nullable": true
                    },
                    "CreationDate": {
                        "type": "string",
                        "description": "Дата и время создания объекта",
                        "format": "date-time"
                    },
                    "ModificationDate": {
                        "type": "string",
                        "description": "Дата и время модификации объекта",
                        "format": "date-time"
                    },
                    "Owner": {
                        "$ref": "#/components/schemas/BaseItem_Of_Int32"
                    },
                    "EffectivePermissions": {
                        "$ref": "#/components/schemas/ObjectPermission"
                    },
                    "IsTemplate": {
                        "type": "boolean",
                        "description": "Является ли объект шаблоном"
                    },
                    "HostObjectId": {
                        "type": "string",
                        "description": "Идентификатор родительского объекта (для коллекций)",
                        "format": "uuid",
                        "nullable": true
                    },
                    "Icon": {
                        "type": "string",
                        "nullable": true
                    },
                    "Version": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "VersionTimestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "IsActualVersion": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false,
                "description": "Объект класса"
            },
            "WioObjectAttribute": {
                "required": [
                    "Id",
                    "Name",
                    "Type"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "description": "Идентификатор объекта",
                        "format": "uuid"
                    },
                    "Name": {
                        "maxLength": 450,
                        "minLength": 1,
                        "type": "string",
                        "description": "Название объекта"
                    },
                    "Description": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "Описание объекта",
                        "nullable": true
                    },
                    "Locked": {
                        "$ref": "#/components/schemas/LockType"
                    },
                    "Type": {
                        "$ref": "#/components/schemas/WioAttributeType"
                    },
                    "Constraints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Constraint"
                        },
                        "description": "Список ограничений",
                        "nullable": true
                    },
                    "Unit": {
                        "$ref": "#/components/schemas/BaseItem_Of_Int64"
                    },
                    "Group": {
                        "$ref": "#/components/schemas/BaseItem_Of_Int64"
                    },
                    "Value": {
                        "description": "Значение атрибута",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "WioObjectNode": {
                "required": [
                    "Entity",
                    "Id",
                    "IsActualVersion",
                    "Name",
                    "Version",
                    "VersionTimestamp"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "string",
                        "description": "Идентификатор объекта",
                        "format": "uuid"
                    },
                    "Name": {
                        "maxLength": 450,
                        "minLength": 1,
                        "type": "string",
                        "description": "Название объекта"
                    },
                    "Description": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "Описание объекта",
                        "nullable": true
                    },
                    "Children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WioObjectNode"
                        },
                        "nullable": true
                    },
                    "EffectivePermissions": {
                        "$ref": "#/components/schemas/ObjectPermission"
                    },
                    "HasChildren": {
                        "type": "boolean"
                    },
                    "Level": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Icon": {
                        "type": "string",
                        "nullable": true
                    },
                    "Entity": {
                        "$ref": "#/components/schemas/WioEntity"
                    },
                    "Version": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "VersionTimestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "IsActualVersion": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "WioObjectPathInfo": {
                "required": [
                    "CanShowInMainTree"
                ],
                "type": "object",
                "properties": {
                    "CanShowInMainTree": {
                        "type": "boolean"
                    },
                    "AncestorsOrSelf": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WioObjectNode"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "WioRole": {
                "required": [
                    "Id",
                    "Name"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "description": "Идентификатор объекта",
                        "format": "int32"
                    },
                    "Description": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "Описание объекта",
                        "nullable": true
                    },
                    "Name": {
                        "maxLength": 100,
                        "minLength": 3,
                        "pattern": "^[а-яА-Я\\w\\-\\.]+$",
                        "type": "string"
                    }
                },
                "additionalProperties": false,
                "description": "Роль в Inter Operation for Web"
            },
            "WioUser": {
                "required": [
                    "Id",
                    "IsExternal",
                    "Name"
                ],
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "description": "Идентификатор объекта",
                        "format": "int32"
                    },
                    "Name": {
                        "maxLength": 450,
                        "minLength": 1,
                        "type": "string",
                        "description": "Название объекта"
                    },
                    "Description": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "Описание объекта",
                        "nullable": true
                    },
                    "LockoutDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "LastActivity": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "IsExternal": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "Attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false,
                "description": "Пользователь"
            },
            "WioUserCredentials": {
                "required": [
                    "CurrentPassword",
                    "Password"
                ],
                "type": "object",
                "properties": {
                    "CurrentPassword": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "Password": {
                        "maxLength": 100,
                        "minLength": 5,
                        "type": "string"
                    },
                    "ConfirmPassword": {
                        "type": "string",
                        "nullable": true
                    },
                    "Lockout": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "WopiOptions": {
                "required": [
                    "ForceNativePdf"
                ],
                "type": "object",
                "properties": {
                    "Server": {
                        "type": "string",
                        "nullable": true
                    },
                    "InternalSite": {
                        "type": "string",
                        "nullable": true
                    },
                    "ForceNativePdf": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            }
        },
        "securitySchemes": {
            "OAuth2": {
                "type": "oauth2",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "/connect/authorize",
                        "scopes": {
                            "ns": "Common scope for all Web-API"
                        }
                    },
                    "password": {
                        "tokenUrl": "/connect/token",
                        "scopes": {
                            "ns": "Common scope for all Web-API"
                        }
                    },
                    "authorizationCode": {
                        "authorizationUrl": "/connect/authorize",
                        "tokenUrl": "/connect/token",
                        "scopes": {
                            "ns": "Common scope for all Web-API"
                        }
                    }
                }
            }
        }
    }
}