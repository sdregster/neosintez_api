name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-asyncio pytest-cov pytest-mock
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

    - name: Lint with ruff (if available)
      run: |
        pip install ruff || echo "Ruff не установлен, пропускаем линтинг"
        ruff check . || echo "Линтинг завершен"
      continue-on-error: true

    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=neosintez_api --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  test-integration:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-asyncio pytest-mock

    - name: Run integration tests
      run: |
        pytest tests/test_integration.py -v --tb=short

    - name: Run type mapping tests
      run: |
        pytest tests/test_type_mapping.py -v

    - name: Run cache tests
      run: |
        pytest tests/test_cache.py -v

    - name: Run validation tests  
      run: |
        pytest tests/test_validation.py -v 